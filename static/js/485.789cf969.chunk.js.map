{"version":3,"file":"static/js/485.789cf969.chunk.js","mappings":"+TAGMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFAECN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACgBO,IAHjB,cAEhBJ,EAFgB,yBAMfA,EAASC,MANM,2CAAH,sDASRI,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKvBH,EAAYW,UAAY,CACtBC,OAAQC,IAAAA,OAAAA,W,iJClCGC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0bAoBRE,EAAQF,EAAAA,GAAAA,GAAH,uEAKLG,EAAWH,EAAAA,GAAAA,GAAH,uJAURI,EAAWJ,EAAAA,GAAAA,GAAH,oFAMRK,EAAYL,EAAAA,GAAAA,IAAH,+PAaTM,EAAiBN,EAAAA,GAAAA,EAAH,gG,SCX3B,EAlCoB,WAClB,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACR3B,EAAAA,EAAAA,MAAc4B,KAAKJ,EACpB,GAAE,KAGD,iCACE,SAACP,EAAD,UAAO,oBACP,SAACC,EAAD,UACGK,EAAeM,KAAI,SAAAC,GAClB,IAAIC,EAOJ,OALEA,EADED,EAAME,YACE,0CAAsCF,EAAME,aAGpD,gFAGF,SAACb,EAAD,WACE,UAACL,EAAD,CAAUmB,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMX,GAApD,WACE,SAACL,EAAD,CAAWiB,IAAKN,EAAYO,MAAM,MAAMC,IAAKT,EAAMU,SACnD,SAACnB,EAAD,UAAiBS,EAAMU,YAHZV,EAAMI,GAOxB,QAIR,C","sources":["components/fetchFilms.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '5df8195cde59490a98b624cfb815be7a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async searchQuery => {\n  // console.log(searchQuery);\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\ngetTrending.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkItem = styled(NavLink)`\n  width: 400px;\n  // color: white;\n  background-color: black;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  text-decoration: none;\n  margin-bottom: 40px;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n  border-radius: 5px;\n  &:hover {\n    scale: calc(1.02);\n    box-shadow: 0px 0px 20px 8px gray;\n  }\n  &:nth-last-child(-n + 4) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const HomeList = styled.ul`\n  display: flex;\n\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const HomeItem = styled.li`\n  list-style-type: none;\n  width: 400px;\n  height: 100%;\n`;\n\nexport const ImageItem = styled.img`\n  width: 100%;\n  height: 600px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 5px;\n\n  &:hover {\n    cursor: zoom-in;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);\n  }\n`;\n\nexport const MovieItemTitle = styled.p`\n  height: 50px;\n  color: white;\n  font-size: 20px;\n  padding: 10px;\n`;\n","import { getTrending } from '../../components/fetchFilms';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  HomeList,\n  HomeItem,\n  LinkItem,\n  Title,\n  ImageItem,\n  MovieItemTitle,\n} from './Home.styled';\n\nconst useTrending = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrending().then(setTrendingMovies);\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      <HomeList>\n        {trendingMovies.map(movie => {\n          let posterPath;\n          if (movie.poster_path) {\n            posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n          } else {\n            posterPath =\n              'https://i.pinimg.com/originals/a0/57/48/a05748c84d7093e382c560bbc57665ce.jpg';\n          }\n          return (\n            <HomeItem key={movie.id}>\n              <LinkItem to={`/movies/${movie.id}`} state={{ from: location }}>\n                <ImageItem src={posterPath} width=\"400\" alt={movie.title} />\n                <MovieItemTitle>{movie.title}</MovieItemTitle>\n              </LinkItem>\n            </HomeItem>\n          );\n        })}\n      </HomeList>\n    </>\n  );\n};\n\nexport default useTrending;\n"],"names":["KEY","axios","getTrending","response","data","results","getQuery","searchQuery","getDetails","movieId","getCast","cast","getReviews","propTypes","search","PropTypes","LinkItem","styled","NavLink","Title","HomeList","HomeItem","ImageItem","MovieItemTitle","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","then","map","movie","posterPath","poster_path","to","id","state","from","src","width","alt","title"],"sourceRoot":""}