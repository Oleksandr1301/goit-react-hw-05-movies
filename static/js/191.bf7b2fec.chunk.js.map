{"version":3,"file":"static/js/191.bf7b2fec.chunk.js","mappings":"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","sources":["components/fetchFilms.jsx","pages/Movies/Movies.styled.jsx","components/MoviesList/MoviesList.syled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '5df8195cde59490a98b624cfb815be7a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async searchQuery => {\n  // console.log(searchQuery);\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\ngetTrending.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  padding: 18px;\n  font-size: 18px;\n  text-align: center;\n  border: 1px solid #000;\n  border-radius: 5px;\n  background-color: #e3facf;\n  margin: 0 auto 30px auto;\n`;\n\nexport const Field = styled.input`\n  border-radius: 5px;\n  border: 1px solid #000;\n  padding: 5px;\n  margin-right: 10px;\n`;\n\nexport const ButtonSearch = styled.button`\n  width: 90px;\n  margin-left: 40px;\n  padding: 5px 0 5px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  cursor: pointer;\n  background-color: #9df2aa;\n  margin: 0 auto;\n  &:hover {\n    scale: 1.03;\n    background-color: #06941b;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkItem = styled(Link)`\n  width: 400px;\n  // color: white;\n  background-color: black;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  text-decoration: none;\n  margin-bottom: 40px;\n  transition: scale 250ms linear, box-shadow 250ms linear;\n  border-radius: 5px;\n  &:hover {\n    scale: calc(1.02);\n    box-shadow: 0px 0px 20px 8px gray;\n  }\n  &:nth-last-child(-n + 4) {\n    margin-bottom: 0;\n  }\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  list-style-type: none;\n  width: 400px;\n  height: 100%;\n`;\n\nexport const ImageItem = styled.img`\n  width: 100%;\n  height: 600px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 5px;\n\n  &:hover {\n    cursor: zoom-in;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);\n  }\n`;\nexport const MovieItemTitle = styled.p`\n  height: 50px;\n  color: white;\n  font-size: 20px;\n  padding: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  Title,\n  MovieList,\n  MovieItem,\n  LinkItem,\n  ImageItem,\n  MovieItemTitle,\n} from './MoviesList.syled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Title>Search result</Title>\n      <MovieList>\n        {movies.map(movie => {\n          let posterPath;\n          if (movie.poster_path) {\n            posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n          } else {\n            posterPath =\n              'https://i.pinimg.com/originals/a0/57/48/a05748c84d7093e382c560bbc57665ce.jpg';\n          }\n          return (\n            <MovieItem key={movie.id}>\n              <LinkItem to={`/movies/${movie.id}`} state={{ from: location }}>\n                <ImageItem src={posterPath} width=\"400\" alt={movie.title} />\n                <MovieItemTitle>{movie.title}</MovieItemTitle>\n              </LinkItem>\n            </MovieItem>\n          );\n        })}\n      </MovieList>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Field, ButtonSearch } from './Movies.styled';\nimport { getQuery } from '../../components/fetchFilms';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovie] = useState(null);\n  const [totalMovie, setTotalMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [inputSearch, setInputSearch] = useState(query);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setMovie(null);\n    setTotalMovie(null);\n    setLoading(true);\n\n    getQuery(query)\n      .then(data => {\n        setMovie(data.results);\n        setTotalMovie(data.total_results);\n        setLoading(false);\n      })\n      .catch(console.log);\n  }, [query]);\n\n  const handleInputChange = e => {\n    setInputSearch(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n\n    setSearchParams({ query: queryNormalized });\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Field\n          type=\"text\"\n          name=\"query\"\n          value={inputSearch}\n          onChange={handleInputChange}\n          placeholder=\"Enter movie name\"\n        />\n\n        <ButtonSearch type=\"submit\">Search</ButtonSearch>\n      </Form>\n\n      {loading && (\n        <div>\n          <p>Loading...</p>\n        </div>\n      )}\n      {movies && <MoviesList movies={movies} />}\n\n      {totalMovie === 0 && <div>Not found movies</div>}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","axios","getTrending","response","data","results","getQuery","searchQuery","getDetails","movieId","getCast","cast","getReviews","propTypes","search","PropTypes","Form","styled","Field","ButtonSearch","LinkItem","Link","Title","MovieList","MovieItem","ImageItem","MovieItemTitle","movies","location","useLocation","map","movie","posterPath","poster_path","to","id","state","from","src","width","alt","title","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovie","totalMovie","setTotalMovie","loading","setLoading","inputSearch","setInputSearch","useEffect","then","total_results","catch","console","log","onSubmit","e","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","name","onChange","currentTarget","placeholder"],"sourceRoot":""}