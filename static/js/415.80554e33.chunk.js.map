{"version":3,"file":"static/js/415.80554e33.chunk.js","mappings":"+TAGMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFAECN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAFhD,cAEhBJ,EAFgB,yBAKfA,EAASC,MALM,2CAAH,sDAQRI,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAMVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKvBH,EAAYW,UAAY,CACtBC,OAAQC,IAAAA,OAAAA,W,sFCEV,UAnCoB,WAClB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,MAAcoB,KAAKJ,EACpB,GAAE,KAGD,iCACE,4CACA,wBACGD,EAAeM,KAAI,SAAAC,GAClB,IAAIC,EAOJ,OALIA,EADED,EAAME,YACE,0CAAsCF,EAAME,aAGpD,gFAGJ,yBACA,UAAC,KAAD,CAASC,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMX,GAAnD,WACE,gBAAKY,IAAKN,EAAYO,MAAM,MAAMC,IAAKT,EAAMU,QAC5CV,EAAMU,UAHAV,EAAMI,GAQlB,QAIR,C","sources":["components/fetchFilms.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '5df8195cde59490a98b624cfb815be7a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async searchQuery => {\n  // console.log(searchQuery);\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\ngetTrending.propTypes = {\n  search: PropTypes.string.isRequired,\n};","import { getTrending } from '../components/fetchFilms';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nconst useTrending = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrending().then(setTrendingMovies);\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {trendingMovies.map(movie => {\n          let posterPath;\n            if (movie.poster_path) {\n              posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n            } else {\n              posterPath =\n                'https://i.pinimg.com/originals/a0/57/48/a05748c84d7093e382c560bbc57665ce.jpg';\n          }\n          return (\n            <li key={movie.id}>\n            <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img src={posterPath} width=\"400\" alt={movie.title} />\n              {movie.title}\n            </NavLink>\n          </li>\n          )\n          \n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default useTrending;"],"names":["KEY","axios","getTrending","response","data","results","getQuery","searchQuery","getDetails","movieId","getCast","cast","getReviews","propTypes","search","PropTypes","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","then","map","movie","posterPath","poster_path","to","id","state","from","src","width","alt","title"],"sourceRoot":""}