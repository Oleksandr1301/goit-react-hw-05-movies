{"version":3,"file":"static/js/257.c60f1d81.chunk.js","mappings":"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","sources":["components/fetchFilms.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '5df8195cde59490a98b624cfb815be7a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async searchQuery => {\n  // console.log(searchQuery);\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\ngetTrending.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmDetails = styled.div`\n  display: flex;\n`;\nexport const LinkItem = styled(Link)`\n  margin-top: 0;\n`;\n\nexport const ButtonGoBack = styled.button`\n  padding: 5px 5px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  background-color: #9df2aa;\n  width: 90px;\n  &:hover {\n    scale: 1.03;\n    background-color: #06941b;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);\n  }\n`;\nexport const GoBack = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px;\n  padding: 15px;\n  margin-bottom: 25px;\n`;\n\nexport const Details = styled.div`\n  width: 500px;\n  padding: 15px;\n`;\n\nexport const Information = styled.div`\n  margin-top: 25px;\n`;\n\nexport const InformationList = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-top: 25px;\n`;\n\nexport const InformationItem = styled.li`\n  list-style-type: none;\n`;\n\nexport const Cast = styled(Link)`\n  display: flex;\n  justify-content: center;\n  color: black;\n  padding: 5px 5px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  background-color: #9df2aa;\n  width: 90px;\n  text-decoration: none;\n  &:hover {\n    scale: 1.03;\n    background-color: #06941b;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.35);\n  }\n`;\n","import { Suspense, useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport { getDetails } from '../../components/fetchFilms';\nimport {\n  FilmDetails,\n  ButtonGoBack,\n  GoBack,\n  Details,\n  Information,\n  InformationList,\n  InformationItem,\n  Cast,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  function formatAsPercent(num) {\n    return new Intl.NumberFormat('default', {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(num / 10);\n  }\n\n  return (\n    <>\n      <FilmDetails>\n        <GoBack>\n          <Link to={backLink.current}>\n            <ButtonGoBack>‚Üê Go back</ButtonGoBack>\n          </Link>\n          <img\n            src={\n              movie.poster_path\n                ? `https://www.themoviedb.org/t/p/w300/${movie.poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n            }\n            alt={`${movie.title}`}\n          />\n        </GoBack>\n        <Details>\n          <div>\n            <h2>\n              {movie.title} ({movie.release_date.slice(0, 4)})\n            </h2>\n            <p>User score: {formatAsPercent(movie.vote_average)}</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{movie.genres.map(genre => genre.name).join(' / ')}</p>\n          </div>\n\n          <Information>\n            <h2>Additional information</h2>\n            <InformationList>\n              <InformationItem>\n                <Cast to={'cast'}>Cast</Cast>\n              </InformationItem>\n              <InformationItem>\n                <Cast to={'reviews'}>Reviews</Cast>\n              </InformationItem>\n            </InformationList>\n          </Information>\n        </Details>\n      </FilmDetails>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","axios","getTrending","response","data","results","getQuery","searchQuery","getDetails","movieId","getCast","cast","getReviews","propTypes","search","PropTypes","FilmDetails","styled","ButtonGoBack","Link","GoBack","Details","Information","InformationList","InformationItem","Cast","num","useState","movie","setMovie","useParams","location","useLocation","backLink","useRef","state","from","useEffect","then","to","current","src","poster_path","alt","title","release_date","slice","vote_average","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}