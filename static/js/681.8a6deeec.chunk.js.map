{"version":3,"file":"static/js/681.8a6deeec.chunk.js","mappings":"8LAkCA,UA9BgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,KAAKL,EAC1B,GAAE,CAACC,IAECF,EAIL,OACE,yBACGA,EAAaO,OAAS,GACrB,wBACGP,EAAaQ,KAAI,SAAAC,GAAM,OACtB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADM,MAQ1B,uCAIP,C,+MC7BKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFAECN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACgBO,IAHjB,cAEhBJ,EAFgB,yBAMfA,EAASC,MANM,2CAAH,sDASRI,EAAU,mCAAG,WAAMnB,GAAN,uFACDY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,oBAAsCW,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVK,EAAO,mCAAG,WAAMpB,GAAN,uFACEY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,4BAA8CW,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKM,MAFA,2CAAH,sDAKPlB,EAAU,mCAAG,WAAMH,GAAN,uFACDY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,4BAA8CW,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKvBH,EAAYS,UAAY,CACtBC,OAAQC,IAAAA,OAAAA,W","sources":["components/Reviews.jsx","components/fetchFilms.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../components/fetchFilms';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {movieReviews.length > 0 ? (\n        <ul>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        'There is no review of this film yet'\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '5df8195cde59490a98b624cfb815be7a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async searchQuery => {\n  // console.log(searchQuery);\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\ngetTrending.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n"],"names":["useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getReviews","then","length","map","review","author","content","id","KEY","axios","getTrending","response","data","results","getQuery","searchQuery","getDetails","getCast","cast","propTypes","search","PropTypes"],"sourceRoot":""}