{"version":3,"file":"static/js/247.9685b005.chunk.js","mappings":"8LAuCA,UAnCa,WACX,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,KAAKL,EACvB,GAAE,CAACC,IAECF,EAIL,OACE,+BACE,wBACGA,EAAUO,KAAI,SAAAC,GAAK,OAClB,2BACE,gBAEEC,IACED,EAAME,aAAN,8CAC2CF,EAAME,cADjD,+EAIFC,IAAKH,EAAMI,iBAEb,wBAAKJ,EAAMK,QACX,gCAAQL,EAAMM,eAXPN,EAAMO,GADG,OAkB3B,C,+MClCKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFAECN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAFhD,cAEhBJ,EAFgB,yBAKfA,EAASC,MALM,2CAAH,sDAQRI,EAAU,mCAAG,WAAMtB,GAAN,uFACDe,EAAAA,EAAAA,IAAA,gBAAmBf,EAAnB,oBAAsCc,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAMVf,EAAO,mCAAG,WAAMH,GAAN,uFACEe,EAAAA,EAAAA,IAAA,gBAAmBf,EAAnB,4BAA8Cc,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMxB,GAAN,uFACDe,EAAAA,EAAAA,IAAA,gBAAmBf,EAAnB,4BAA8Cc,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKvBH,EAAYS,UAAY,CACtBC,OAAQC,IAAAA,OAAAA,W","sources":["components/Cast/Cast.jsx","components/fetchFilms.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../fetchFilms';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setMovieCast);\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  return (\n    <>\n      <ul >\n        {movieCast.map(actor => (\n          <li key={actor.id} >\n            <img\n             \n              src={\n                actor.profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.original_name}\n            />\n            <h3>{actor.name}</h3>\n            <p>As: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '5df8195cde59490a98b624cfb815be7a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async searchQuery => {\n  // console.log(searchQuery);\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  // console.log(response);\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\ngetTrending.propTypes = {\n  search: PropTypes.string.isRequired,\n};"],"names":["useState","movieCast","setMovieCast","movieId","useParams","useEffect","getCast","then","map","actor","src","profile_path","alt","original_name","name","character","id","KEY","axios","getTrending","response","data","results","getQuery","searchQuery","getDetails","cast","getReviews","propTypes","search","PropTypes"],"sourceRoot":""}